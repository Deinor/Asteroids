import math
from pyglet.window import key
from . import physycalobjects, resources

class Player (physycalobjects.PhysycalObjects):
    """
    Class defining player sprite and behaviour, user imput.
    """
    def __init__(self, *args, **kwargs):
        super(Player, self).__init__(img=resources.player_image, *args, **kwargs)

        # Constants
        self.thrust = 100
        self.rotate_speed = 100

        #Game starts to recognise key handlers
        self.key_handler = key.KeyStateHandler()

    def update(self, dt):
        super (Player, self).update(dt)

        """
        Updating player sprite position based on user keyboard imputs.
        """
        if self.key_handler[key.LEFT]:
            self.rotation += -self.rotate_speed * dt
        if self.key_handler[key.RIGHT]:
            self.rotation += +self.rotate_speed * dt
        if self.key_handler[key.UP]:
            #Change of angle based on imput
            angle_in_rad = math.radians(self.rotation)
            #Speed increment generated by user imput
            speed_increment_x = math.sin(angle_in_rad) * self.thrust * dt
            speed_increment_y = math.cos(angle_in_rad) * self.thrust * dt
            #Update actual speed
            self.speed_x += speed_increment_x
            self.speed_y += speed_increment_y
        if self.key_handler[key.DOWN]:
            #Change of angle based on imput
            angle_in_rad = math.radians(self.rotation)
            #Speed increment generated by user imput
            speed_increment_x = math.sin(angle_in_rad) * self.thrust * dt
            speed_increment_y = math.cos(angle_in_rad) * self.thrust * dt
            #Update actual speed
            self.speed_x -= speed_increment_x
            self.speed_y -= speed_increment_y


